name: Generic Builder

on:
  workflow_dispatch:
    inputs:
      machineType:
        required: true
        type: choice
        default: "ubuntu-latest"
        options:
          - ubuntu-latest
          - windows-latest
          - macos-latest
      exportType:
        required: true
        type: choice
        default: "androidPackage"
        options:
          - androidPackage
          - androidAppBundle
      repository:
        required: true
        default: repo
      branch:
        required: true
        default: main
      proBuild:
        required: false
        type: boolean
      # 商業考量
      noArtifact:
        required: false
        type: boolean
      development:
        required: false
        type: boolean
      slack:
        required: false
        type: boolean

jobs:
  build:
    name: Build Project
    runs-on: ${{inputs.machineType}}
    steps:
      # 查看repo
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: "refs/heads/${{inputs.branch}}"
          token: ${{ fromJson(secrets.SETTING).PAT }}
          lfs: true # 使用 LFS

      # Cache可以讓你之後Build更快
      - name: Cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Free Disk Space for Android
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h
          # Before
          echo "Disk space before:"
          df -h

          #echo "Listing 100 largest packages"
          #dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
          #echo "Removing large packages"
          #sudo apt-get remove -y '^ghc-8.*'
          #sudo apt-get remove -y '^dotnet-.*'
          #sudo apt-get remove -y '^llvm-.*'
          #sudo apt-get remove -y 'php.*'
          #sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel
          #sudo apt-get autoremove -y
          #sudo apt-get clean
          #df -h

          echo "Removing large directories"
          # https://github.com/apache/flink/blob/master/tools/azure-pipelines/free_disk_space.sh
          rm -rf /usr/share/dotnet/

          # https://github.com/actions/virtual-environments/issues/709#issuecomment-612569242
          rm -rf "/usr/local/share/boost"
          rm -rf "$AGENT_TOOLSDIRECTORY"

          # After
          echo "Disk space after:"
          df -h

      # 用Game-CI Builder建置專案
      - name: Build project
        if: ${{ !inputs.proBuild }}
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ fromJson(secrets.SETTING).email }}
          UNITY_PASSWORD: ${{ fromJson(secrets.SETTING).password }}
        with:
          customParameters: "${{ inputs.development && '-Development' }}"
          targetPlatform: Android
          androidExportType: ${{ inputs.exportType }}
          # androidKeystorePass: ${{ fromJson(secrets.SETTING).keystorePwd }}
          # androidKeyaliasName: ${{ fromJson(secrets.SETTING).keyaliasName }}
          # androidKeyaliasPass: ${{ fromJson(secrets.SETTING).keyaliasPwd }}

      # Pro build
      - name: Pro Build project
        if: ${{ inputs.proBuild }}
        uses: game-ci/unity-builder@v4
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ fromJson(secrets.SETTING).email }}
          UNITY_PASSWORD: ${{ fromJson(secrets.SETTING).password }}
        with:
          customParameters: "${{ inputs.development && '-Development' }}"
          targetPlatform: Android
          androidExportType: ${{ inputs.exportType }}
          androidKeystorePass: ${{ fromJson(secrets.SETTING).keystorePwd }}
          androidKeyaliasName: ${{ fromJson(secrets.SETTING).keyaliasName }}
          androidKeyaliasPass: ${{ fromJson(secrets.SETTING).keyaliasPwd }}

      # 輸出成artifact
      - name: Ouput Artifact
        if: ${{ !inputs.noArtifact }}
        uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build
          retention-days: 1

      # 上傳至 Slack
      - name: Upload To Slack
        if: ${{ inputs.slack }}
        uses: MeilCli/slack-upload-file@v3
        id: message
        with:
          slack_token: ${{ fromJson(secrets.SETTING).slackToken }}
          channel_id: ${{ fromJson(secrets.SETTING).slackChannel }}
          file_path: "build/Android/*.*"
          initial_comment: |
            `${{ fromJson(secrets.SETTING).repo }}` on `${{ inputs.branch }}` Build Complete!!
